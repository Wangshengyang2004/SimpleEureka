def gf_quat_to_tensor(orientation: typing.Union[Gf.Quatd, Gf.Quatf, Gf.Quaternion], device=None) -> torch.Tensor:
    # Converts a pxr Quaternion type to a torch array (scalar first).

def euler_angles_to_quats(euler_angles: torch.Tensor, degrees: bool = False, extrinsic: bool = True, device=None) -> torch.Tensor:
    # Vectorized version of converting euler angles to quaternion (scalar first)

def rot_matrices_to_quats(rotation_matrices: torch.Tensor, device=None) -> torch.Tensor:
    # Vectorized version of converting rotation matrices to quaternions

def rad2deg(radian_value: torch.Tensor, device=None) -> torch.Tensor:
    # Converts radians to degrees and returns a tensor.

def deg2rad(degree_value: float, device=None) -> torch.Tensor:
    # Converts degrees to radians and returns a tensor.